#BlueJ class context
comment0.target=StdAudio
comment0.text=\r\n\ \ <i>Standard\ audio</i>.\ This\ class\ provides\ a\ basic\ capability\ for\r\n\ \ creating,\ reading,\ and\ saving\ audio.\ \r\n\ \ <p>\r\n\ \ The\ audio\ format\ uses\ a\ sampling\ rate\ of\ 44,100\ Hz,\ 16-bit,\ monaural.\r\n\r\n\ \ <p>\r\n\ \ For\ additional\ documentation,\ see\ <a\ href\="https\://introcs.cs.princeton.edu/15inout">Section\ 1.5</a>\ of\r\n\ \ <i>Computer\ Science\:\ An\ Interdisciplinary\ Approach</i>\ by\ Robert\ Sedgewick\ and\ Kevin\ Wayne.\r\n\r\n\ \ @author\ Robert\ Sedgewick\r\n\ \ @author\ Kevin\ Wayne\r\n
comment1.params=
comment1.target=StdAudio()
comment10.params=filename
comment10.target=void\ playInBackground(java.lang.String)
comment10.text=\r\n\ Plays\ an\ audio\ file\ (in\ .wav,\ .mid,\ or\ .au\ format)\ in\ a\ background\ thread.\r\n\r\n\ @param\ filename\ the\ name\ of\ the\ audio\ file\r\n\ @throws\ IllegalArgumentException\ if\ unable\ to\ play\ {@code\ filename}\r\n\ @throws\ IllegalArgumentException\ if\ {@code\ filename}\ is\ {@code\ null}\r\n
comment11.params=
comment11.target=void\ run()
comment12.params=ais
comment12.target=void\ stream(javax.sound.sampled.AudioInputStream)
comment13.params=filename
comment13.target=void\ loop(java.lang.String)
comment13.text=\r\n\ Loops\ an\ audio\ file\ (in\ .wav,\ .mid,\ or\ .au\ format)\ in\ a\ background\ thread.\r\n\r\n\ @param\ filename\ the\ name\ of\ the\ audio\ file\r\n\ @throws\ IllegalArgumentException\ if\ {@code\ filename}\ is\ {@code\ null}\r\n\ @deprecated\ replaced\ by\ {@link\ \#loopInBackground(String\ filename)}\r\n
comment14.params=filename
comment14.target=void\ loopInBackground(java.lang.String)
comment14.text=\r\n\ Loops\ an\ audio\ file\ (in\ .wav,\ .mid,\ or\ .au\ format)\ in\ a\ background\ thread.\r\n\r\n\ @param\ filename\ the\ name\ of\ the\ audio\ file\r\n\ @throws\ IllegalArgumentException\ if\ {@code\ filename}\ is\ {@code\ null}\r\n
comment15.params=
comment15.target=void\ run()
comment16.params=hz\ duration\ amplitude
comment16.target=double[]\ note(double,\ double,\ double)
comment16.text=\r\n\ Unit\ tests\ {@code\ StdAudio}.\r\n
comment17.params=args
comment17.target=void\ main(java.lang.String[])
comment17.text=\r\n\ Test\ client\ -\ play\ an\ A\ major\ scale\ to\ standard\ audio.\r\n\r\n\ @param\ args\ the\ command-line\ arguments\r\n
comment2.params=
comment2.target=void\ init()
comment3.params=filename
comment3.target=javax.sound.sampled.AudioInputStream\ getAudioInputStreamFromFile(java.lang.String)
comment4.params=
comment4.target=void\ close()
comment4.text=\r\n\ Closes\ standard\ audio.\r\n
comment5.params=sample
comment5.target=void\ play(double)
comment5.text=\r\n\ Writes\ one\ sample\ (between\ -1.0\ and\ +1.0)\ to\ standard\ audio.\r\n\ If\ the\ sample\ is\ outside\ the\ range,\ it\ will\ be\ clipped.\r\n\r\n\ @param\ \ sample\ the\ sample\ to\ play\r\n\ @throws\ IllegalArgumentException\ if\ the\ sample\ is\ {@code\ Double.NaN}\r\n
comment6.params=samples
comment6.target=void\ play(double[])
comment6.text=\r\n\ Writes\ the\ array\ of\ samples\ (between\ -1.0\ and\ +1.0)\ to\ standard\ audio.\r\n\ If\ a\ sample\ is\ outside\ the\ range,\ it\ will\ be\ clipped.\r\n\r\n\ @param\ \ samples\ the\ array\ of\ samples\ to\ play\r\n\ @throws\ IllegalArgumentException\ if\ any\ sample\ is\ {@code\ Double.NaN}\r\n\ @throws\ IllegalArgumentException\ if\ {@code\ samples}\ is\ {@code\ null}\r\n
comment7.params=filename
comment7.target=double[]\ read(java.lang.String)
comment7.text=\r\n\ Reads\ audio\ samples\ from\ a\ file\ (in\ .wav\ or\ .au\ format)\ and\ returns\r\n\ them\ as\ a\ double\ array\ with\ values\ between\ -1.0\ and\ +1.0.\r\n\ The\ audio\ file\ must\ be\ 16-bit\ with\ a\ sampling\ rate\ of\ 44,100.\r\n\ It\ can\ be\ mono\ or\ stereo.\r\n\r\n\ @param\ \ filename\ the\ name\ of\ the\ audio\ file\r\n\ @return\ the\ array\ of\ samples\r\n
comment8.params=filename\ samples
comment8.target=void\ save(java.lang.String,\ double[])
comment8.text=\r\n\ Saves\ the\ double\ array\ as\ an\ audio\ file\ (using\ .wav\ or\ .au\ format).\r\n\r\n\ @param\ \ filename\ the\ name\ of\ the\ audio\ file\r\n\ @param\ \ samples\ the\ array\ of\ samples\r\n\ @throws\ IllegalArgumentException\ if\ unable\ to\ save\ {@code\ filename}\r\n\ @throws\ IllegalArgumentException\ if\ {@code\ samples}\ is\ {@code\ null}\r\n\ @throws\ IllegalArgumentException\ if\ {@code\ filename}\ is\ {@code\ null}\r\n\ @throws\ IllegalArgumentException\ if\ {@code\ filename}\ extension\ is\ not\ {@code\ .wav}\r\n\ \ \ \ \ \ \ \ \ or\ {@code\ .au}\r\n
comment9.params=filename
comment9.target=void\ play(java.lang.String)
comment9.text=\r\n\ Plays\ an\ audio\ file\ (in\ .wav,\ .mid,\ or\ .au\ format)\ in\ a\ background\ thread.\r\n\r\n\ @param\ filename\ the\ name\ of\ the\ audio\ file\r\n\ @throws\ IllegalArgumentException\ if\ unable\ to\ play\ {@code\ filename}\r\n\ @throws\ IllegalArgumentException\ if\ {@code\ filename}\ is\ {@code\ null}\r\n\ @deprecated\ replaced\ by\ {@link\ \#playInBackground(String\ filename)}\r\n
numComments=18
